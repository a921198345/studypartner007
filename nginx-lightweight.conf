# 轻量级服务器的nginx配置
# 适用于xuexidazi.com

server {
    listen 80;
    listen [::]:80;
    server_name xuexidazi.com www.xuexidazi.com;
    
    # HTTP重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name xuexidazi.com www.xuexidazi.com;
    
    # SSL证书配置
    ssl_certificate /www/server/panel/vhost/cert/xuexidazi.com/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/xuexidazi.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # 安全头部
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    
    # 日志配置
    access_log /www/wwwlogs/xuexidazi.com.log;
    error_log /www/wwwlogs/xuexidazi.com.error.log;
    
    # 根目录配置
    root /www/wwwroot/law-exam-assistant;
    index index.html index.htm;
    
    # 主要代理配置 - 转发到轻量级服务器
    location / {
        # 首先尝试静态文件，然后代理到Node.js
        try_files $uri $uri/ @nodejs;
        
        # 缓存控制
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }
    
    # Node.js代理配置
    location @nodejs {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置 - 针对轻量级服务器优化
        proxy_connect_timeout 3s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # 健康检查
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 3s;
    }
    
    # API路由专门配置
    location /api/ {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API专用超时设置
        proxy_connect_timeout 2s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # 禁用缓存
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # 静态资源优化
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # 压缩
        gzip_static on;
    }
    
    # 健康检查端点
    location /health {
        proxy_pass http://127.0.0.1:8080/api/health;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # 禁止访问敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|log|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        return 404 '<!DOCTYPE html><html><head><title>404</title></head><body><h1>页面未找到</h1><p><a href="/">返回首页</a></p></body></html>';
    }
    
    location = /50x.html {
        internal;
        return 500 '<!DOCTYPE html><html><head><title>服务暂时不可用</title></head><body><h1>服务暂时不可用</h1><p>请稍后再试</p></body></html>';
    }
}

# Gzip压缩配置
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/atom+xml
    image/svg+xml;